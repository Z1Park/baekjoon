/*
1. n-1 + 1 중복 없이 타일 채우기
1
1
1

2. n-2 + 중복 없이 2 타일 채우기
11  11
12  21
22  22

3. n-3 + 중복 없이 3 타일 채우기
111  111  111  112  122
222  223  233  122  112
333  233  223  333  333

4. n-4 + 중복 없이 4 타일 채우기
1112  1222  
3322  1133  
3444  4443  

5. n-5 + 중복 없이 5 타일 채우기
11122  11222  
43332  13334  
44555  55544  

6. n-6 + 중복 없이 6 타일 채우기
111222  111222  122233  112223
344455  334445  114443  144433
336665  366655  555666  555666

7. n-7 + 중복 없이 7 타일 채우기
=> n-4 에 가로로 직선 타일 놓기
111---2  1---222  
33---22  11---33  
3---444  444---3  

8. n-8 + 중복 없이 8 타일 채우기
=> n-5 에 가로로 직선 타일 놓기
111---22  11---222 
3444---2  1333---4  
33---555  555---44  

9. n-9 + 중복 없이 9 타일 채우기
=> n-6 에 가로로 직선 타일 놓기
111---222  111---222  1222---33  11222---3
3444---55  33444---5  11444---3  1444---33
33666---5  3666---55  555---666  555---666

이후 반복...

dp[n] = dp[n-1] + dp[n-2] * 2 + dp[n-3] * 5 
        + dp[n-4] * 2 + dp[n-5] * 2 + dp[n-6] * 4 +
        + dp[n-7] * 2 + dp[n-8] * 2 + dp[n-9] * 4 + ...

*/


class Solution {
    public int solution(int n) {
        if (n < 2) return 1;
        final int MOD = 1000000007;
        final int[] qualifier = {1, 2, 5};
        long[] dp = new long[n+1];
        dp[0] = 1;
        dp[1] = 1;
        dp[2] = 3;
        long acc = 0;
        for (int i = 3; i <= n; i++) {
            for (int j = 1; j <= 3; j++)
                dp[i] += dp[i-j] * qualifier[j-1] % MOD;
            for (int j = 6; j <= i; j += 3)
                dp[i] += dp[i-j] * 2 % MOD;
            dp[i] = (dp[i] + acc) % MOD;
            acc = (acc + dp[i-3] * 2) % MOD;
        }
        return (int)dp[n];
    }
}